{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/player.ts","webpack:///src/app/player/player.component.ts","webpack:///src/app/player/player.component.html","webpack:///src/app/race.ts","webpack:///src/app/race/race.component.ts","webpack:///src/app/race/race.component.html","webpack:///src/app/settings.service.ts","webpack:///src/app/settings.ts","webpack:///src/app/settings/settings.component.ts","webpack:///src/app/settings/settings.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///crypto (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","$event","target","select","settingsService","AppComponent","dialog","title","tinyURL","settings$","getSettings","open","settings","url","location","protocol","hostname","port","pathname","encodeURIComponent","JSON","stringify","alias","Math","random","toString","substr","fetch","mode","a","b","console","error","openSettings","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","Player","name","availableRaces","bannedRaces","PlayerComponent","playerChange","remove","newName","player","emit","changeName","removePlayer","changeBannedRaces","Race","iconUrl","RaceComponent","RACES","map","idx","SettingsService","buildFromObject","parse","decodeURIComponent","hash","length","slice","assignRaces","_settings$","newSettings","next","seed","getValue","setSettings","racesPerPlayer","players","push","index","splice","newPlayer","providedIn","Settings","rng","races","sort","localeCompare","r","x","i","j","k","findIndex","object","s","key","Object","prototype","hasOwnProperty","call","indexOf","toUpperCase","SettingsComponent","dialogRef","event","previousContainer","container","data","previousIndex","currentIndex","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { SettingsService } from './settings.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Settings } from './settings';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  public title = 'TI4-race-assigner';\r\n  public settings$: Observable<Settings>;\r\n  public tinyURL: string = '';\r\n\r\n  constructor(public dialog: MatDialog, public settingsService: SettingsService) {\r\n    this.settings$ = settingsService.getSettings();\r\n  }\r\n\r\n  openSettings(): void {\r\n    this.dialog.open(SettingsComponent);\r\n  }\r\n  generateURL(settings: Settings): void {\r\n    let url = location.protocol + '//' + location.hostname + ':' + location.port + location.pathname + '#' + encodeURIComponent(JSON.stringify(settings));\r\n    this.tinyURL = '';\r\n    let alias = 'TI4Races-' + Math.random().toString().substr(2);\r\n    fetch('https://tinyurl.com/create.php?source=create&url=' + encodeURIComponent(url) + '&alias=' + alias, { mode: 'no-cors' }).then(\r\n        a => {\r\n          this.tinyURL = 'https://tinyurl.com/' + alias;\r\n        },\r\n        b => {\r\n          this.tinyURL = 'Error while trying to create URL';\r\n          console.error(b);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<h1><span>Twilight Imperium</span> Race Assigner</h1>\r\n<button mat-mini-fab aria-roledescription=\"Open Settings Menu\" (click)=\"openSettings()\" class=\"settingsBtn\">\r\n  <mat-icon>settings</mat-icon>\r\n</button>\r\n<div *ngIf=\"settings$ | async as settings\" class=\"tinyurl\">\r\n  <button mat-raised-button (click)=\"generateURL(settings)\">\r\n    <mat-icon>save</mat-icon> Save as TinyURL\r\n  </button>\r\n  <mat-form-field color=\"accent\">\r\n    <mat-label>TinyURL</mat-label>\r\n    <input matInput [value]=\"tinyURL\" (click)=\"$event.target.select()\">\r\n  </mat-form-field>\r\n</div>\r\n<div *ngIf=\"settings$ | async as settings\" class=\"players\">\r\n  <app-player *ngFor=\"let player of settings.players; let i = index\" [player]=\"player\" [availableRaces]=\"settings.availableRaces\" (playerChange)=\"settingsService.changePlayer($event, i)\" (remove)=\"settingsService.removePlayer(i)\"></app-player>\r\n  <div class=\"addPlayer\">\r\n    <button mat-mini-fab aria-roledescription=\"Add a new player\" (click)=\"settingsService.addPlayer()\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n  </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { PlayerComponent } from './player/player.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { RaceComponent } from './race/race.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PlayerComponent,\r\n    SettingsComponent,\r\n    RaceComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatListModule,\r\n    MatInputModule,\r\n    DragDropModule,\r\n    MatSelectModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Race } from './race';\r\n\r\nexport class Player {\r\n  constructor(\r\n    public name: string = '',\r\n    public availableRaces: Race[] = [],\r\n    public bannedRaces: Race[] = []\r\n  ) { }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Player } from '../player';\r\nimport { Race } from '../race';\r\nimport { MatSelectChange } from '@angular/material/select';\r\n\r\n@Component({\r\n  selector: 'app-player',\r\n  templateUrl: './player.component.html',\r\n  styleUrls: ['./player.component.scss']\r\n})\r\nexport class PlayerComponent implements OnInit {\r\n  @Input() player: Player;\r\n  @Input() availableRaces: Race[];\r\n  @Output() playerChange = new EventEmitter<Player>();\r\n  @Output() remove = new EventEmitter<void>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  changeName(newName: string): void {\r\n    this.player.name = newName;\r\n    this.playerChange.emit(this.player);\r\n  }\r\n  removePlayer(): void {\r\n    this.remove.emit();\r\n  }\r\n  changeBannedRaces(bannedRaces: Race[]): void {\r\n    this.player.bannedRaces = bannedRaces;\r\n    this.playerChange.emit(this.player);\r\n  }\r\n  bannedCompareFn(a: Race, b:Race): boolean {\r\n    return a.id == b.id;\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <mat-form-field>\r\n    <mat-label>Player Name</mat-label>\r\n    <input matInput [value]=\"player.name\" (change)=\"changeName($event.target.value)\">\r\n  </mat-form-field>\r\n  <button mat-mini-fab aria-roledescription=\"Remove player\" (click)=\"removePlayer()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </button>\r\n  <br>\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Banned Races</mat-label>\r\n    <mat-select multiple (selectionChange)=\"changeBannedRaces($event.value)\" [value]=\"player.bannedRaces\" [compareWith]=\"bannedCompareFn\">\r\n      <mat-option *ngFor=\"let race of availableRaces\" [value]=\"race\">{{ race.name }}</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <h2>Available Races</h2>\r\n  <app-race *ngFor=\"let race of player.availableRaces\" [race]=\"race\"></app-race>\r\n</div>\r\n","export class Race {\r\n  constructor(public readonly id: number, public name: string = '', public iconUrl: string = '') { }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Race } from '../race';\r\n\r\n@Component({\r\n  selector: 'app-race',\r\n  templateUrl: './race.component.html',\r\n  styleUrls: ['./race.component.scss']\r\n})\r\nexport class RaceComponent implements OnInit {\r\n  @Input() race: Race;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>{{ race.name }}</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Settings } from './settings';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\nimport { Race } from './race';\r\nimport { Player } from './player';\r\n\r\nconst RACES: Race[] = [\"The Arborec\",\"The Barony of Letnev\",\"The Clan of Saar\",\"The Embers of Muaat\",\"The Emirates of Hacan\",\"The Federation of Sol\",\"The Ghosts of Creuss\",\"The L1Z1X Mindnet\",\"The Mentak Coalition\",\"The Naalu Collective\",\"The Nekro Virus\",\"The Sardakk N’orr\",\"The Universities of Jol-Nar\",\"The Winnu\",\"The Xxcha Kingdom\",\"The Yin Brotherhood\",\"The Yssaril Tribes\"].map((name, idx) => new Race(idx, name));\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SettingsService {\r\n  private _settings$: BehaviorSubject<Settings>;\r\n\r\n  constructor() {\r\n    let settings: Settings;\r\n    try {\r\n      settings = Settings.buildFromObject(JSON.parse(decodeURIComponent(location.hash.substr(1))));\r\n    } catch (e) {\r\n      settings = new Settings();\r\n    }\r\n    if (settings.availableRaces.length + settings.bannedRaces.length == 0) { // if no races, initialize availableRaces array\r\n      settings.availableRaces = RACES.slice();\r\n    }\r\n    settings.assignRaces();\r\n    this._settings$ = new BehaviorSubject(settings);\r\n    //this._settings$.pipe(debounceTime(300)).subscribe(settings => location.hash = JSON.stringify(settings));\r\n  }\r\n\r\n  getSettings(): Observable<Settings> {\r\n    return this._settings$;\r\n  }\r\n  setSettings(newSettings: Settings): void {\r\n    newSettings.assignRaces();\r\n    this._settings$.next(newSettings);\r\n  }\r\n  setSeed(seed: string|null = null): void {\r\n    let settings = this._settings$.getValue();\r\n    if (seed != null) {\r\n      settings.seed = seed;\r\n    } else {\r\n      settings.seed = Math.random().toString();\r\n    }\r\n    this.setSettings(settings);\r\n  }\r\n  setRacesPerPlayer(racesPerPlayer: number): void {\r\n    let settings = this._settings$.getValue();\r\n    settings.racesPerPlayer = racesPerPlayer;\r\n    this.setSettings(settings);\r\n  }\r\n  addPlayer(player: Player|null = null): void {\r\n    let settings = this._settings$.getValue();\r\n    if (player != null) {\r\n      settings.players.push(player);\r\n    } else {\r\n      settings.players.push(new Player());\r\n    }\r\n    this.setSettings(settings);\r\n  }\r\n  removePlayer(index: number): void {\r\n    let settings = this._settings$.getValue();\r\n    settings.players.splice(index, 1);\r\n    this.setSettings(settings);\r\n  }\r\n  changePlayer(newPlayer: Player, index: number): void {\r\n    let settings = this._settings$.getValue();\r\n    settings.players[index] = newPlayer;\r\n    this.setSettings(settings);\r\n  }\r\n}\r\n","import { Race } from './race';\r\nimport { Player } from './player';\r\nimport * as seedrandom from 'seedrandom';\r\n\r\nexport class Settings {\r\n\r\n  constructor(\r\n    public availableRaces: Race[] = [],\r\n    public bannedRaces: Race[] = [],\r\n    public players: Player[] = [],\r\n    public racesPerPlayer: number = 2,\r\n    public seed: string = ''\r\n  ) { }\r\n\r\n  public static buildFromObject(object: any) {\r\n    let s = new Settings();\r\n    for (const key in object) {\r\n      if (Object.prototype.hasOwnProperty.call(object, key) && ['AVAILABLERACES', 'BANNEDRACES', 'SEED', 'PLAYERS', 'RACESPERPLAYER'].indexOf(key.toUpperCase()) > -1) {\r\n        s[key] = object[key];\r\n      }\r\n    }\r\n    return s;\r\n  }\r\n  assignRaces(): void {\r\n    let rng = seedrandom(this.seed);\r\n    let races = this.availableRaces\r\n      .slice()\r\n      .sort((a, b) => a.name.localeCompare(b.name))\r\n      .map(r => { return { x: rng(), r: r } })\r\n      .sort((a, b) => a.x - b.x)\r\n      .map(x => x.r);\r\n    for (let i = 0; i < this.racesPerPlayer; i++) {\r\n      for (let j = 0; j < this.players.length; j++) {\r\n        if (races.length === 0) {\r\n          return;\r\n        }\r\n        if (i == 0) {\r\n          this.players[j].availableRaces = [];\r\n        }\r\n        for (let k = 0; k < races.length; k++) {\r\n          if (this.players[j].bannedRaces.findIndex(r => r.id == races[k].id) < 0) {\r\n            this.players[j].availableRaces.push(races.splice(k, 1)[0]);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { SettingsService } from '../settings.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Settings } from '../settings';\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  public settings$: Observable<Settings>;\r\n\r\n  constructor(public dialogRef: MatDialogRef<SettingsComponent>, public settingsService: SettingsService) {\r\n    this.settings$ = settingsService.getSettings();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>, settings: Settings): void {\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n    } else {\r\n      transferArrayItem(event.previousContainer.data,\r\n                        event.container.data,\r\n                        event.previousIndex,\r\n                        event.currentIndex);\r\n    }\r\n    this.settingsService.setSettings(settings);\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"settings$ | async as settings\" class=\"settings\">\r\n  <div class=\"seed\">\r\n    <mat-form-field>\r\n      <mat-label>Random Seed</mat-label>\r\n      <input matInput [value]=\"settings.seed\" (change)=\"settingsService.setSeed($event.target.value)\">\r\n    </mat-form-field>\r\n    <button mat-mini-fab aria-roledescription=\"Generate new seed\" (click)=\"settingsService.setSeed()\">\r\n      <mat-icon>autorenew</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"racesPerPlayer\">\r\n    <mat-form-field>\r\n      <mat-label>Races per player</mat-label>\r\n      <input matInput [value]=\"settings.racesPerPlayer\" (change)=\"settingsService.setRacesPerPlayer($event.target.value)\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"availableRaces\">\r\n    <h2>Available Races</h2>\r\n    <div\r\n      cdkDropList\r\n      #availableRaces=\"cdkDropList\"\r\n      [cdkDropListData]=\"settings.availableRaces\"\r\n      [cdkDropListConnectedTo]=\"[bannedRaces]\"\r\n      (cdkDropListDropped)=\"drop($event, settings)\">\r\n      <div class=\"race\" *ngFor=\"let race of settings.availableRaces\" cdkDrag><app-race [race]=\"race\"></app-race></div>\r\n    </div>\r\n  </div>\r\n  <div class=\"bannedRaces\">\r\n    <h2>Banned Races</h2>\r\n    <div\r\n      cdkDropList\r\n      #bannedRaces=\"cdkDropList\"\r\n      [cdkDropListData]=\"settings.bannedRaces\"\r\n      [cdkDropListConnectedTo]=\"[availableRaces]\"\r\n      (cdkDropListDropped)=\"drop($event, settings)\">\r\n      <div class=\"race\" *ngFor=\"let race of settings.bannedRaces\" cdkDrag><app-race [race]=\"race\"></app-race></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */"]}